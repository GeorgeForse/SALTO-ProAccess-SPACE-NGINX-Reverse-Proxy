server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name [YOUR-HOSTNAME];

	# SSL
	ssl_certificate /etc/nginx/ssl/[YOUR-HOSTNAME].crt;
	ssl_certificate_key /etc/nginx/ssl/[YOUR-HOSTNAME].key;


	# Main Reverse Proxy
	location / {
		proxy_pass https://[YOUR-CONTROLLER-IP]:8100$uri;
		proxy_redirect off;
		proxy_buffering off;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-For $remote_addr;
		proxy_set_header host $host;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header Upgrade $http_upgrade;
		proxy_http_version 1.1;
		proxy_set_header Connection "Upgrade";
	}

}

# Subdomains Redirect
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name [YOUR-HOSTNAME];

	# SSL
	ssl_certificate /etc/nginx/ssl/[YOUR-HOSTNAME].crt;
	ssl_certificate_key /etc/nginx/ssl/[YOUR-HOSTNAME].key;

	return 301 https://[YOUR-HOSTNAME]$request_uri;
}

# HTTP Redirect
server {
	listen 80;
	listen [::]:80;

	server_name .[YOUR-HOSTNAME];

	return 301 https://[YOUR-HOSTNAME]$request_uri;
}

# WebSocket Proxy

server {
	listen 8102 ssl http2;

	server_name [YOUR-HOSTNAME];

	# SSL
	ssl_certificate /etc/nginx/ssl/[YOUR-HOSTNAME].crt;
	ssl_certificate_key /etc/nginx/ssl/[YOUR-HOSTNAME].key;

	#reverse Proxy
	location / {
		proxy_pass https://[YOUR-CONTROLLER-IP]:8102;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
		}
}
